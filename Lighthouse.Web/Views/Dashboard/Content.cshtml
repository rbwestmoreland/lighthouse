﻿@model Lighthouse.Web.Models.Dashboard.Dashboard
@{
    Layout = null;
}
<div class="span4">
    <div class="page-header">
        <h1>Queued</h1>
    </div>
    @{ 
        foreach (var application in Model.Applications)
        {
            foreach (var build in application.GetQueuedBuilds())
            {
                var commitIdFull = build.CommitId;
                var commitIdShort = build.CommitId.SafeSubString(0, 7, "...");
                var commitMessage = build.CommitMessage;
                <h3>@application.Name <small rel="popover" title="@Html.AttributeEncode(commitIdShort)"  data-content="@Html.AttributeEncode(commitMessage)" data-original-title="@Html.AttributeEncode(commitIdShort)"><i class="icon-comment"></i> @commitIdShort</small></h3>
            }
        }
            
        if(!Model.Applications.Any(a => a.GetQueuedBuilds().Any()))
        {
            <h3><small>none</small></h3>
        }
    }

    <div class="page-header">
        <h1>Building</h1>
    </div>
    @{ 
        foreach (var application in Model.Applications)
        {
            foreach (var build in application.GetBuildingBuilds())
            {
                var commitIdFull = build.CommitId;
                var commitIdShort = build.CommitId.SafeSubString(0, 7, "...");
                var commitMessage = build.CommitMessage;
                <h3>@application.Name <small rel="popover" title="@Html.AttributeEncode(commitIdShort)"  data-content="@Html.AttributeEncode(commitMessage)" data-original-title="@Html.AttributeEncode(commitIdShort)"><i class="icon-comment"></i> @commitIdShort</small></h3>
                <div class="progress progress-striped active">
                    <div class="bar" style="width: 100%;"></div>
                </div>
            }
        }

        if (!Model.Applications.Any(a => a.GetBuildingBuilds().Any()))
        {
            <h3><small>none</small></h3>
        }
    }
</div>

<div class="span8">
    <div class="page-header">
        <h1>Applications <small>last updated on @DateTime.UtcNow.ToString("MMM d, yyyy h:mm:ss tt") UTC</small></h1>
    </div>
    <div class="row">
        @foreach (var application in Model.Applications)
        {
            var completedBuilds = application.GetCompletedBuilds();
            <div class="span4">
                <div class="well">
                    <h3>@application.Name
                    @if (completedBuilds.Any())
                    {
                        var build = completedBuilds.First();
                        var commitIdFull = build.CommitId;
                        var commitIdShort = build.CommitId.SafeSubString(0, 7, "...");
                        var commitMessage = build.CommitMessage;
                        <small rel="popover" title="@Html.AttributeEncode(commitIdShort)"  data-content="@Html.AttributeEncode(commitMessage)" data-original-title="@Html.AttributeEncode(commitIdShort)" data-placement="top"><i class="icon-comment"></i> @commitIdShort</small>
                    }
                    </h3>
                    <p>
                        @if (completedBuilds.Any())
                        {
                            var build = completedBuilds.First();
                            <div class="btn-group">
                                <a class="btn btn-mini @Html.GetButtonClass(build.Status) dropdown-toggle" data-toggle="dropdown" href="#">
                                    <i class="icon-white @Html.GetIconClass(build.Status)"></i> @build.Status <span class="caret"></span>
                                </a>
                                <ul class="dropdown-menu">
                                    <li><a href="@application.Url" target="_blank"><i class="icon-share-alt"></i> View Application on AppHarbor</a></li>
                                    <li class="divider"></li>
                                    <li><a href="@build.Url" target="_blank"><i class="icon-share-alt"></i> View Build on AppHarbor</a></li>
                                    <li><a href="@build.TestsUrl" target="_blank"><i class="icon-list-alt"></i> View Tests on AppHarbor</a></li>
                                    @if (build.IsSuccessful())
                                    {
                                    <li><a href="@build.DownloadUrl" target="_blank"><i class="icon-download"></i> Download from AppHarbor</a></li>
                                    }
                                </ul>
                            </div>
                        }
                        else
                        {
                            <div class="btn-group">
                                <a class="btn btn-mini disabled dropdown-toggle" data-toggle="dropdown">
                                    <i class="icon-question-sign"></i> no builds <span class="caret"></span>
                                </a>
                            </div>
                        }
                    </p>
                </div>
            </div>
        }
    </div>
</div>
